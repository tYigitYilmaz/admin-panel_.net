@using AVBS.Enum
@using AVBS.Office.UI.Helper
@model AVBS.Office.UI.Models.User.ClientModel

@Html.AntiForgeryToken()
@Html.ValidationSummary( true )

<style>
    .form-horizontal .form-group {
        margin-right: 0 !important;
    }
</style>




<div class="row">
    <div class="col-md-6 col-sm-12">
        <div class="form-group">
            <label for="Name">Adı</label>
            <div class="input-group">
                <div class="input-group-addon"><i class="ti-user"></i></div>
                @Html.TextBoxFor( model => model.Name, htmlAttributes: new { @class = "form-control", @placeholder = "Adı", required = "", maxlength = "50" } )
            </div>
        </div>
    </div>
    <div class="col-md-6 col-sm-12">
        <div class="form-group">
            <label for="Surname">Soyadı</label>
            <div class="input-group">
                <div class="input-group-addon"><i class="ti-user"></i></div>
                @Html.TextBoxFor( model => model.Surname, htmlAttributes: new { @class = "form-control", @placeholder = "Soyadı", required = "", maxlength = "50" } )
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6 col-sm-12">
        <div class="form-group">
            <label for="Identity">Kimlik No</label>
            <div class="input-group">
                <div class="input-group-addon">
                    <i class="ti-id-badge"></i>
                </div>
                @Html.TextBoxFor( model => model.Identity, htmlAttributes: new { @class = "form-control identity-inputmask", @placeholder = "Kimlik No", required = "required", maxlength = 11, tcidentity = "tcidentity" } )
            </div>
        </div>
    </div>
    <div class="col-md-6 col-sm-12">
        <div class="form-group">
            <label for="Email">E-posta Adresi</label>
            <div class="input-group">
                <div class="input-group-addon"><i class="ti-email"></i></div>
                @Html.TextBoxFor( model => model.Email, htmlAttributes: new { @class = "form-control email-inputmask", type="email", @placeholder = "Eposta", required = "required", maxlength = "50" } )
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6 col-sm-12">
        <div class="form-group">
            <label for="Password">Şifre</label>
            <div class="input-group">
                <div class="input-group-addon"><i class="ti-key"></i></div>
                @Html.TextBoxFor( model => model.Password, htmlAttributes: new {
               @class = "form-control",
               type = "password",
               @placeholder = "Şifre",
               required = "required",
               data_validation_regex_regex = UserHelper.PasswordRegex,
               data_validation_regex_message = Messages.PasswordError
           } )

            </div>
        </div>
    </div>
    <div class="col-md-6 col-sm-12">
        <div class="form-group">
            <label for="PasswordRepeat">Şifre Tekrar</label>
            <div class="input-group">
                <div class="input-group-addon"><i class="ti-key"></i></div>
                <input class="form-control" data-validation-matches-match="Password" data-validation-matches-message="Girilen şifrelerin aynı olması gerekmekte" id="PasswordRepeat" name="PasswordRepeat" maxlength="50" placeholder="Şifre Tekrar" type="password" value="" aria-invalid="false">
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12 col-sm-12">
        <div class="form-group">
            <label for="Phone">Telefon</label>
            <div class="input-group">
                <div class="input-group-addon"><i class="icon-phone"></i></div>
                @Html.TextBoxFor( model => model.Phone, htmlAttributes: new { @class = "form-control phone-inputmask", @placeholder = "Telefon", maxlength = 50, required = "required" } )
            </div>
        </div>
    </div>
</div>


<script src="/plugins/bower_components/custom-select/custom-select.min.js"></script>
<script src="/plugins/inputmask/jquery.inputmask.bundle.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        // init select2
        $('.select2').each(function (i, obj) {
            if (!$(obj).data("select2")) {
                $(obj).select2();
            }
        });

        //// mask init
        $(".phone-inputmask").inputmask("(999) 999-9999");
        $(".identity-inputmask").inputmask("99999999999");
        $(".email-inputmask").inputmask({
            mask: "*{1,20}[.*{1,20}][.*{1,20}][.*{1,20}]@@*{1,20}[*{2,6}][*{1,2}].*{1,}[.*{2,6}][.*{1,2}]",
            greedy: !1,
            onBeforePaste: function (n, a) {
                return (e = e.toLowerCase()).replace("mailto:", "")
            },
            definitions: {
                "*": {
                    validator: "[0-9A-Za-z!#$%&'*+/=?^_`{|}~/-]",
                    cardinality: 1,
                    casing: "lower"
                }
            }
        });
    });

    $(function () {
        $("input,textarea,select").jqBootstrapValidation(
            {
                preventSubmit: true,
                filter: function () {
                    return $(this).is(":visible");
                }
            }
        );
    });
</script>
